name: Production Deployment

on:
  push:
    branches: [ production ]
  workflow_dispatch:  # Allow manual triggering with version input
    inputs:
      version:
        description: 'Release version'
        required: true
        default: ''

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
    
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
    
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
    
      - name: Build
        run: npm run build
        env:
          REACT_APP_GITHUB_TOKEN: ${{ secrets.REACT_APP_GITHUB_TOKEN }}
          REACT_APP_GITHUB_USERNAME: ${{ secrets.REACT_APP_GITHUB_USERNAME }}
          REACT_APP_GITHUB_REPO: ${{ secrets.REACT_APP_GITHUB_REPO }}
          NODE_ENV: 'production'
    
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          publish_branch: gh-pages  # Explicitly specify gh-pages branch
          user_name: 'GitHub Actions'
          user_email: 'actions@github.com'
          commit_message: 'Deploy production release ${{ github.event.inputs.version || github.ref_name }}'
          full_commit_message: 'Deploy production release ${{ github.event.inputs.version || github.ref_name }} from ${{ github.sha }}'

      - name: Create Release Tag
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        run: |
          git tag v${{ github.event.inputs.version }}
          git push origin v${{ github.event.inputs.version }}
      
      - name: Create GitHub Release
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          draft: false
          prerelease: false
          body: |
            ## Portfolio Website Release v${{ github.event.inputs.version }}
            
            Production release of the portfolio website.
            
            Visit the deployed site at https://digin1.github.io/portfolio-website/