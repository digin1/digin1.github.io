[
  {
    "id": "wordpress-cms-development-clearstacknow-com",
    "type": "projects",
    "metadata": {
      "title": "WordPress CMS Development: ClearStackNow.com",
      "date": "2015-10-11",
      "summary": "Developed and deployed a technical content platform using WordPress CMS, focusing on database technologies and systems administration topics. Customized themes and functionality to create an intuitive knowledge-sharing platform for programming and IT operations.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/clearstacknow.png",
      "tag": "php, wordpress",
      "demo": "https://web.archive.org/web/20151011113825/http://clearstacknow.com/"
    },
    "content": "<h2>Project Overview</h2>\n<p>A technical content platform built with WordPress CMS, focusing on database technologies, programming tutorials, and systems administration topics.</p>\n<h2>Features</h2>\n<ul>\n<li>Comprehensive technical tutorials across multiple IT domains</li>\n<li>Custom theme implementation for technical content presentation</li>\n<li>Category-based content organization (Databases, Programming, Operating Systems, etc.)</li>\n<li>Search functionality for efficient content discovery</li>\n<li>Responsive design for cross-device compatibility</li>\n</ul>\n<h2>Technical Stack</h2>\n<ul>\n<li><strong>CMS</strong>: WordPress</li>\n<li><strong>Programming</strong>: PHP</li>\n<li><strong>Database</strong>: MySQL</li>\n<li><strong>Frontend</strong>: HTML, CSS, JavaScript</li>\n<li><strong>Hosting</strong>: cPanel Server Environment</li>\n</ul>\n<h2>Implementation Details</h2>\n<ul>\n<li>Configured WordPress CMS from scratch on cPanel hosting</li>\n<li>Customized WordPress themes to match technical content requirements</li>\n<li>Created structured content taxonomies for improved organization</li>\n<li>Implemented responsive design elements for mobile compatibility</li>\n<li>Optimized database queries for improved performance</li>\n</ul>\n<h2>Learning Outcomes</h2>\n<ul>\n<li>Mastered WordPress CMS configuration and customization</li>\n<li>Gained practical experience with PHP in WordPress framework</li>\n<li>Developed skills in technical content creation and organization</li>\n<li>Enhanced understanding of web hosting and domain management</li>\n<li>Improved database administration capabilities</li>\n</ul>\n<h2>Archive</h2>\n<p>You can still explore a snapshot of the website via the <a href=\"https://web.archive.org/web/20151011113825/http://clearstacknow.com/\"><a href=\"https://web.archive.org/web/20151011113825/http://clearstacknow.com/\">Internet Archive</a></a></p>\n",
    "rawContent": "\n## Project Overview\nA technical content platform built with WordPress CMS, focusing on database technologies, programming tutorials, and systems administration topics.\n\n## Features\n- Comprehensive technical tutorials across multiple IT domains\n- Custom theme implementation for technical content presentation\n- Category-based content organization (Databases, Programming, Operating Systems, etc.)\n- Search functionality for efficient content discovery\n- Responsive design for cross-device compatibility\n\n## Technical Stack\n- **CMS**: WordPress\n- **Programming**: PHP\n- **Database**: MySQL\n- **Frontend**: HTML, CSS, JavaScript\n- **Hosting**: cPanel Server Environment\n\n## Implementation Details\n- Configured WordPress CMS from scratch on cPanel hosting\n- Customized WordPress themes to match technical content requirements\n- Created structured content taxonomies for improved organization\n- Implemented responsive design elements for mobile compatibility\n- Optimized database queries for improved performance\n\n## Learning Outcomes\n- Mastered WordPress CMS configuration and customization\n- Gained practical experience with PHP in WordPress framework\n- Developed skills in technical content creation and organization\n- Enhanced understanding of web hosting and domain management\n- Improved database administration capabilities\n\n## Archive\n\nYou can still explore a snapshot of the website via the [[Internet Archive](https://web.archive.org/web/20151011113825/http://clearstacknow.com/)](https://web.archive.org/web/20151011113825/http://clearstacknow.com/)\n\n"
  },
  {
    "id": "veeble-knowledge-base-web-development-project",
    "type": "projects",
    "metadata": {
      "title": "Veeble Knowledge Base - Web Development Project",
      "date": "2020-03-01",
      "summary": "Designed and implemented a comprehensive Knowledge Base system for Veeble.com, creating an organized repository of technical documentation accessible to clients. The system features categorized articles spanning various hosting technologies with an intuitive navigation structure and search functionality. Performance optimizations were implemented to ensure quick access to critical support information.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/kbveeble.png",
      "tag": "php, wordpress",
      "demo": "https://kb.veeble.org"
    },
    "content": "<h2>Project Overview</h2>\n<p>A comprehensive knowledge base system designed for Veeble.com to provide organized technical documentation for clients. The system features categorized articles across various hosting technologies with intuitive navigation and powerful search functionality.</p>\n<h2>Project Details</h2>\n<h3>Technologies Used</h3>\n<ul>\n<li>WordPress CMS</li>\n<li>PHP</li>\n<li>MySQL</li>\n<li>HTML/CSS</li>\n<li>JavaScript</li>\n</ul>\n<h3>Key Contributions</h3>\n<ul>\n<li>Designed the information architecture for the Knowledge Base, organizing content into logical categories including Apache, cPanel, Developer&#39;s Stuff, and Firewall/Security</li>\n<li>Implemented user-friendly search functionality allowing clients to quickly find technical solutions</li>\n<li>Created a clean, responsive interface that presents complex technical information in an accessible format</li>\n<li>Developed category-based navigation to improve user experience and content discoverability</li>\n<li>Optimized database queries and page loading performance for faster access to documentation</li>\n<li>Ensured proper indexing of knowledge articles for improved searchability</li>\n<li>Integrated the Knowledge Base seamlessly with Veeble&#39;s existing brand identity and website structure</li>\n</ul>\n<h3>Results</h3>\n<ul>\n<li>Reduced support ticket volume by providing self-service solutions to common technical issues</li>\n<li>Improved client satisfaction through 24/7 access to technical documentation</li>\n<li>Enhanced Veeble&#39;s professional image by showcasing technical expertise</li>\n<li>Created a scalable platform that supports ongoing content additions as new hosting solutions evolve</li>\n</ul>\n<h2>Process</h2>\n<p>The Knowledge Base was built as a custom WordPress implementation, requiring significant modifications to standard templates and database structures. Special attention was paid to performance optimization, ensuring that clients could quickly access critical information during potential server issues when page load times are particularly important.</p>\n<h2>Project URL</h2>\n<p><a href=\"https://www.veeble.com/kb/\"><a href=\"https://www.veeble.com/kb/\">Knowledge Base - Veeble Hosting</a></a></p>\n<h2>License</h2>\n<p>This project was developed for Veeble.com.</p>\n",
    "rawContent": "\n## Project Overview\nA comprehensive knowledge base system designed for Veeble.com to provide organized technical documentation for clients. The system features categorized articles across various hosting technologies with intuitive navigation and powerful search functionality.\n\n## Project Details\n\n### Technologies Used\n* WordPress CMS\n* PHP\n* MySQL\n* HTML/CSS\n* JavaScript\n\n### Key Contributions\n* Designed the information architecture for the Knowledge Base, organizing content into logical categories including Apache, cPanel, Developer's Stuff, and Firewall/Security\n* Implemented user-friendly search functionality allowing clients to quickly find technical solutions\n* Created a clean, responsive interface that presents complex technical information in an accessible format\n* Developed category-based navigation to improve user experience and content discoverability\n* Optimized database queries and page loading performance for faster access to documentation\n* Ensured proper indexing of knowledge articles for improved searchability\n* Integrated the Knowledge Base seamlessly with Veeble's existing brand identity and website structure\n\n### Results\n* Reduced support ticket volume by providing self-service solutions to common technical issues\n* Improved client satisfaction through 24/7 access to technical documentation\n* Enhanced Veeble's professional image by showcasing technical expertise\n* Created a scalable platform that supports ongoing content additions as new hosting solutions evolve\n\n## Process\nThe Knowledge Base was built as a custom WordPress implementation, requiring significant modifications to standard templates and database structures. Special attention was paid to performance optimization, ensuring that clients could quickly access critical information during potential server issues when page load times are particularly important.\n\n## Project URL\n[[Knowledge Base - Veeble Hosting](https://www.veeble.com/kb/)](https://www.veeble.com/kb/)\n\n## License\nThis project was developed for Veeble.com."
  },
  {
    "id": "valentino-rossi-fan-blog",
    "type": "projects",
    "metadata": {
      "title": "46vale.info - Valentino Rossi Fan Blog",
      "date": "2013-03-15",
      "summary": "A comprehensive MotoGP fan blog dedicated to legendary motorcycle racer Valentino Rossi (VR46), featuring race updates, rider interactions, event coverage, and exclusive content. The blog serves as a hub for racing enthusiasts to stay updated on Rossi's career and MotoGP events.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/46vale.png",
      "tag": "Blogger, XML",
      "demo": "https://46vale.info"
    },
    "content": "<h2>Project Overview</h2>\n<p>A comprehensive MotoGP fan blog dedicated to legendary motorcycle racer Valentino Rossi (VR46), featuring race updates, rider interactions, event coverage, and exclusive content. The blog serves as a hub for racing enthusiasts to stay updated on Rossi&#39;s career and MotoGP events.</p>\n<h2>Project Details</h2>\n<h3>Technologies &amp; Platforms Used</h3>\n<ul>\n<li>Blogger/Blogspot CMS</li>\n<li>HTML/CSS customization</li>\n<li>JavaScript for dynamic elements</li>\n<li>Responsive design principles</li>\n<li>Social media integration</li>\n<li>Google Analytics</li>\n<li>Custom domain configuration</li>\n<li>SEO optimization</li>\n</ul>\n<h3>Key Features</h3>\n<ul>\n<li><strong>Multi-category Content Layout</strong>: Organized sections for different types of racing news and Rossi updates</li>\n<li><strong>Custom Navigation Menu</strong>: Easy access to store, tickets, official websites, and social channels</li>\n<li><strong>Responsive Grid Layout</strong>: Adaptable content display for all device sizes</li>\n<li><strong>Featured Posts Carousel</strong>: Highlighting important race updates and rider interactions</li>\n<li><strong>Social Media Integration</strong>: Direct links to MotoGP and Rossi&#39;s official social channels</li>\n<li><strong>Comment System</strong>: Community engagement through discussion threads</li>\n<li><strong>Post Categorization</strong>: Organized content by year, event type, and rider interactions</li>\n<li><strong>Page View Counter</strong>: Tracking blog popularity and audience engagement</li>\n<li><strong>Media-Rich Articles</strong>: High-quality images from races and events</li>\n</ul>\n<h3>Development Process</h3>\n<p>The blog was built on Blogger&#39;s platform with extensive customization to create a professional sports news site appearance. Key steps included:</p>\n<ol>\n<li><strong>Platform Selection</strong>: Chose Blogger for its reliability and customization options</li>\n<li><strong>Template Customization</strong>: Modified a base template with MotoGP-inspired colors and layout</li>\n<li><strong>Navigation Structure</strong>: Created a comprehensive menu system linking to relevant MotoGP resources</li>\n<li><strong>Content Strategy</strong>: Developed a consistent posting schedule around race events and news</li>\n<li><strong>Performance Optimization</strong>: Implemented image compression and lazy loading for faster page loads</li>\n<li><strong>SEO Implementation</strong>: Optimized posts with appropriate keywords related to Valentino Rossi and MotoGP</li>\n</ol>\n<h3>Special Features</h3>\n<ul>\n<li><strong>Race Coverage</strong>: Detailed articles about Rossi&#39;s performances in MotoGP races</li>\n<li><strong>Rider Interactions</strong>: Coverage of special moments between Rossi and other racers, particularly Lewis Hamilton</li>\n<li><strong>Event Calendar</strong>: Updates on upcoming races and appearances</li>\n<li><strong>Historical Content</strong>: Articles about Rossi&#39;s career milestones and achievements</li>\n<li><strong>Fan Community</strong>: Space for Rossi enthusiasts to connect and discuss</li>\n</ul>\n<h3>Results</h3>\n<ul>\n<li>Established a dedicated platform for English-speaking Valentino Rossi fans</li>\n<li>Created a comprehensive archive of race coverage and career highlights</li>\n<li>Built a community of engaged MotoGP enthusiasts</li>\n<li>Developed content management and publishing skills</li>\n<li>Gained experience in sports content creation and audience building</li>\n</ul>\n<h2>Technical Highlights</h2>\n<ul>\n<li><strong>Custom CSS Modifications</strong>: Enhanced the standard Blogger template with racing-themed design elements</li>\n<li><strong>Responsive Grid Layout</strong>: Implemented a flexible content grid that adapts to various screen sizes</li>\n<li><strong>Category-Based Navigation</strong>: Created an intuitive content organization system </li>\n<li><strong>Image Optimization</strong>: Implemented techniques to balance quality and loading speed</li>\n<li><strong>Cross-Posting Integration</strong>: Connected blog content with social media platforms</li>\n</ul>\n<h2>Achievements</h2>\n<ul>\n<li>Consistent content production spanning multiple MotoGP seasons</li>\n<li>Coverage of special events like the Rossi-Hamilton vehicle swap</li>\n<li>Built a loyal readership of motorcycle racing enthusiasts</li>\n<li>Developed expertise in motorsport content creation</li>\n<li>Practical application of web publishing and content management skills</li>\n</ul>\n<p>The <a href=\"https://46vale.info\">46vale.info</a> fan blog demonstrates my ability to create and maintain a content-rich website focused on a specific interest area, implement appropriate design elements for the subject matter, and build an engaged community around shared passions.</p>\n",
    "rawContent": "\n## Project Overview\nA comprehensive MotoGP fan blog dedicated to legendary motorcycle racer Valentino Rossi (VR46), featuring race updates, rider interactions, event coverage, and exclusive content. The blog serves as a hub for racing enthusiasts to stay updated on Rossi's career and MotoGP events.\n\n## Project Details\n\n### Technologies & Platforms Used\n* Blogger/Blogspot CMS\n* HTML/CSS customization\n* JavaScript for dynamic elements\n* Responsive design principles\n* Social media integration\n* Google Analytics\n* Custom domain configuration\n* SEO optimization\n\n### Key Features\n* **Multi-category Content Layout**: Organized sections for different types of racing news and Rossi updates\n* **Custom Navigation Menu**: Easy access to store, tickets, official websites, and social channels\n* **Responsive Grid Layout**: Adaptable content display for all device sizes\n* **Featured Posts Carousel**: Highlighting important race updates and rider interactions\n* **Social Media Integration**: Direct links to MotoGP and Rossi's official social channels\n* **Comment System**: Community engagement through discussion threads\n* **Post Categorization**: Organized content by year, event type, and rider interactions\n* **Page View Counter**: Tracking blog popularity and audience engagement\n* **Media-Rich Articles**: High-quality images from races and events\n\n### Development Process\nThe blog was built on Blogger's platform with extensive customization to create a professional sports news site appearance. Key steps included:\n\n1. **Platform Selection**: Chose Blogger for its reliability and customization options\n2. **Template Customization**: Modified a base template with MotoGP-inspired colors and layout\n3. **Navigation Structure**: Created a comprehensive menu system linking to relevant MotoGP resources\n4. **Content Strategy**: Developed a consistent posting schedule around race events and news\n5. **Performance Optimization**: Implemented image compression and lazy loading for faster page loads\n6. **SEO Implementation**: Optimized posts with appropriate keywords related to Valentino Rossi and MotoGP\n\n### Special Features\n* **Race Coverage**: Detailed articles about Rossi's performances in MotoGP races\n* **Rider Interactions**: Coverage of special moments between Rossi and other racers, particularly Lewis Hamilton\n* **Event Calendar**: Updates on upcoming races and appearances\n* **Historical Content**: Articles about Rossi's career milestones and achievements\n* **Fan Community**: Space for Rossi enthusiasts to connect and discuss\n\n### Results\n* Established a dedicated platform for English-speaking Valentino Rossi fans\n* Created a comprehensive archive of race coverage and career highlights\n* Built a community of engaged MotoGP enthusiasts\n* Developed content management and publishing skills\n* Gained experience in sports content creation and audience building\n\n## Technical Highlights\n* **Custom CSS Modifications**: Enhanced the standard Blogger template with racing-themed design elements\n* **Responsive Grid Layout**: Implemented a flexible content grid that adapts to various screen sizes\n* **Category-Based Navigation**: Created an intuitive content organization system \n* **Image Optimization**: Implemented techniques to balance quality and loading speed\n* **Cross-Posting Integration**: Connected blog content with social media platforms\n\n## Achievements\n* Consistent content production spanning multiple MotoGP seasons\n* Coverage of special events like the Rossi-Hamilton vehicle swap\n* Built a loyal readership of motorcycle racing enthusiasts\n* Developed expertise in motorsport content creation\n* Practical application of web publishing and content management skills\n\nThe [46vale.info](https://46vale.info) fan blog demonstrates my ability to create and maintain a content-rich website focused on a specific interest area, implement appropriate design elements for the subject matter, and build an engaged community around shared passions."
  },
  {
    "id": "invisiblehacker-com-my-first-ever-website",
    "type": "projects",
    "metadata": {
      "title": "InvisibleHacker.com — My First Ever Website",
      "date": "2012-04-05",
      "summary": "Despite its intriguing name, the site focused on ethical programming resources, particularly C language tutorials and exercises. The project featured a responsive layout with a dark-themed UI inspired by early 2000s 'hacker aesthetics,' custom navigation, and categorized sections for programming content. This entirely hand-coded project established strong web development fundamentals and ignited a lasting passion for software development. An archived version remains accessible via the Internet Archive.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/invisiblehacker.png",
      "tag": "pilot, html",
      "demo": "https://web.archive.org/web/20180211034924/http://www.invisiblehacker.com/"
    },
    "content": "<h2>Overview</h2>\n<p>InvisibleHacker.com was my first website created during college, marking the beginning of my journey in software development. Built entirely from scratch using HTML, CSS, and static web design principles, this project sparked my long-term passion for building software and web applications. Despite its mysterious name, it was an ethical website focused on sharing programming resources, especially for C language learners.</p>\n<h2>Project Description</h2>\n<p>InvisibleHacker.com was more than just a website — it was my personal gateway into the world of web development. I designed and developed every part of the site manually, using only basic tools and no frameworks.</p>\n<h3>Features</h3>\n<ul>\n<li>Fully responsive static layout</li>\n<li>Custom navigation menu with hover effects</li>\n<li>Categorized sections for Programming, Web Design, and Ethical Hacking content</li>\n<li>Curated collection of C programming examples and logic-building exercises</li>\n<li>Simple but effective UI inspired by early 2000s &quot;hacker-style&quot; themes (dark mode before it was cool!)</li>\n<li>Integration with social media icons using pure CSS techniques</li>\n</ul>\n<h3>Content</h3>\n<p>I hosted tutorials and logic programs like:</p>\n<ul>\n<li>Sum and average of three numbers</li>\n<li>Distance calculation between two cities</li>\n<li>Identifying prime/Armstrong numbers</li>\n<li>Reverse and factorial logic</li>\n<li>Simple C-based calculator simulations</li>\n</ul>\n<p>At the time, I didn&#39;t use any CMS, JS libraries, or third-party templates — just raw HTML and CSS. This project taught me fundamentals like layout design, styling, navigation systems, and the importance of user experience even in simple applications.</p>\n<h2>Technologies Used</h2>\n<ul>\n<li>HTML4/5</li>\n<li>CSS2/3</li>\n<li>Manual file linking and layout structuring</li>\n<li>No CMS or JavaScript frameworks — purely handcrafted code</li>\n</ul>\n<h2>Key Learnings</h2>\n<ul>\n<li>Developed strong foundational knowledge of HTML and CSS</li>\n<li>Learned how to build static websites from scratch</li>\n<li>Practiced clear content organization and layout design</li>\n<li>Gained early insights into UX design and user navigation</li>\n<li>Sparked interest in ethical tech, education, and sharing knowledge</li>\n</ul>\n<h2>Archive</h2>\n<p>You can still explore a snapshot of the website via the <a href=\"https://web.archive.org/web/20180211034924/http://www.invisiblehacker.com/\"><a href=\"https://web.archive.org/web/20180211034924/http://www.invisiblehacker.com/\">Internet Archive</a></a></p>\n",
    "rawContent": "\n## Overview\nInvisibleHacker.com was my first website created during college, marking the beginning of my journey in software development. Built entirely from scratch using HTML, CSS, and static web design principles, this project sparked my long-term passion for building software and web applications. Despite its mysterious name, it was an ethical website focused on sharing programming resources, especially for C language learners.\n\n## Project Description\nInvisibleHacker.com was more than just a website — it was my personal gateway into the world of web development. I designed and developed every part of the site manually, using only basic tools and no frameworks.\n\n### Features\n- Fully responsive static layout\n- Custom navigation menu with hover effects\n- Categorized sections for Programming, Web Design, and Ethical Hacking content\n- Curated collection of C programming examples and logic-building exercises\n- Simple but effective UI inspired by early 2000s \"hacker-style\" themes (dark mode before it was cool!)\n- Integration with social media icons using pure CSS techniques\n\n### Content\nI hosted tutorials and logic programs like:\n- Sum and average of three numbers\n- Distance calculation between two cities\n- Identifying prime/Armstrong numbers\n- Reverse and factorial logic\n- Simple C-based calculator simulations\n\nAt the time, I didn't use any CMS, JS libraries, or third-party templates — just raw HTML and CSS. This project taught me fundamentals like layout design, styling, navigation systems, and the importance of user experience even in simple applications.\n\n## Technologies Used\n- HTML4/5\n- CSS2/3\n- Manual file linking and layout structuring\n- No CMS or JavaScript frameworks — purely handcrafted code\n\n## Key Learnings\n- Developed strong foundational knowledge of HTML and CSS\n- Learned how to build static websites from scratch\n- Practiced clear content organization and layout design\n- Gained early insights into UX design and user navigation\n- Sparked interest in ethical tech, education, and sharing knowledge\n\n## Archive\nYou can still explore a snapshot of the website via the [[Internet Archive](https://web.archive.org/web/20180211034924/http://www.invisiblehacker.com/)](https://web.archive.org/web/20180211034924/http://www.invisiblehacker.com/)\n"
  },
  {
    "id": "hycel-asset-management-system",
    "type": "projects",
    "metadata": {
      "title": "Hycel Asset Management System",
      "date": "2021-04-15",
      "summary": "The Hycel Asset Management System is an IoT-integrated hydrogen leakage detection infrastructure built for Deakin University that visualizes real-time sensor data on interactive Google Maps. Using PHP, MySQL, JavaScript, and BigData integration, the system displays color-coded map markers with detailed sensor information panels showing temperature, humidity, and system status. The project features custom SQL queries for efficient data retrieval, a responsive interface for cross-device monitoring, and a built-in comment system for team communication. This safety-critical system enables early detection of potential hydrogen leaks, enhancing facility safety protocols and creating a scalable platform for the university's expanding Hycel precinct.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/hycel.png",
      "tag": "php, bootstrap, Google Big Data, Google Maps API, IoT, MySQL"
    },
    "content": "<h2>Project Overview</h2>\n<p>An IoT integrated hydrogen leakage detection infrastructure developed for Deakin University (Victoria, Australia) to ensure the safety of the Hycel precinct. The system utilizes Google BigData to visualize real-time sensor data on interactive maps, providing critical monitoring capabilities for hydrogen-related safety systems.</p>\n<h2>Project Details</h2>\n<h3>Technologies Used</h3>\n<ul>\n<li>PHP</li>\n<li>MySQL</li>\n<li>JavaScript</li>\n<li>Bootstrap</li>\n<li>Google Maps API</li>\n<li>BigData Integration</li>\n<li>IoT Sensor Integration</li>\n<li>SQL</li>\n</ul>\n<h3>Key Contributions</h3>\n<ul>\n<li>Developed an interactive mapping system that displays real-time sensor data with color-coded markers</li>\n<li>Implemented a sensor information panel that provides detailed metrics including temperature, humidity, sampling frequency, and system status</li>\n<li>Created a data visualization system showing warning and danger thresholds for critical measurements</li>\n<li>Built a comment/chat system allowing team members to communicate about specific sensor readings</li>\n<li>Designed a responsive interface accessible across multiple devices for monitoring on-the-go</li>\n<li>Integrated Google BigData for efficient storage and retrieval of large volumes of sensor data</li>\n<li>Implemented SQL queries to filter and display relevant sensor information based on location and status</li>\n<li>Set up real-time data refreshing to ensure the latest safety information is always available</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li>Interactive map with sensor location markers</li>\n<li>Detailed sensor information panels showing:<ul>\n<li>Temperature and humidity readings</li>\n<li>Precise GPS location coordinates</li>\n<li>Timestamp of readings</li>\n<li>Sampling frequency</li>\n<li>System ID and manufacturer details</li>\n<li>Operating specifications</li>\n</ul>\n</li>\n<li>Color-coded warning system for identifying potential issues</li>\n<li>Data visualization tools for monitoring trends</li>\n<li>User comment system for team communication</li>\n<li>Admin controls for system management</li>\n</ul>\n<h3>Results</h3>\n<ul>\n<li>Provided Deakin University with a comprehensive safety monitoring system for hydrogen facilities</li>\n<li>Enhanced safety protocols through early detection of potential leaks or abnormal readings</li>\n<li>Improved communication among team members regarding sensor status and maintenance</li>\n<li>Created a scalable system that can accommodate additional sensors as the Hycel precinct expands</li>\n</ul>\n<h2>Process</h2>\n<p>This project was developed as an outsourced engagement for Deakin University&#39;s Hycel initiative. The development focused primarily on functionality, ensuring reliable data transfer from sensors to the visualization platform. The system was designed to handle large volumes of IoT data while maintaining responsive performance for users monitoring the facility.</p>\n<h2>Project URL</h2>\n<p><a href=\"https://hycelassetmanagement.space\"><a href=\"https://hycelassetmanagement.space/\">Hycel Asset Management System</a></a></p>\n<h2>License</h2>\n<p>This project was developed for Deakin University&#39;s Hycel initiative.</p>\n",
    "rawContent": "\n## Project Overview\nAn IoT integrated hydrogen leakage detection infrastructure developed for Deakin University (Victoria, Australia) to ensure the safety of the Hycel precinct. The system utilizes Google BigData to visualize real-time sensor data on interactive maps, providing critical monitoring capabilities for hydrogen-related safety systems.\n\n## Project Details\n\n### Technologies Used\n* PHP\n* MySQL\n* JavaScript\n* Bootstrap\n* Google Maps API\n* BigData Integration\n* IoT Sensor Integration\n* SQL\n\n### Key Contributions\n* Developed an interactive mapping system that displays real-time sensor data with color-coded markers\n* Implemented a sensor information panel that provides detailed metrics including temperature, humidity, sampling frequency, and system status\n* Created a data visualization system showing warning and danger thresholds for critical measurements\n* Built a comment/chat system allowing team members to communicate about specific sensor readings\n* Designed a responsive interface accessible across multiple devices for monitoring on-the-go\n* Integrated Google BigData for efficient storage and retrieval of large volumes of sensor data\n* Implemented SQL queries to filter and display relevant sensor information based on location and status\n* Set up real-time data refreshing to ensure the latest safety information is always available\n\n### Features\n* Interactive map with sensor location markers\n* Detailed sensor information panels showing:\n  * Temperature and humidity readings\n  * Precise GPS location coordinates\n  * Timestamp of readings\n  * Sampling frequency\n  * System ID and manufacturer details\n  * Operating specifications\n* Color-coded warning system for identifying potential issues\n* Data visualization tools for monitoring trends\n* User comment system for team communication\n* Admin controls for system management\n\n### Results\n* Provided Deakin University with a comprehensive safety monitoring system for hydrogen facilities\n* Enhanced safety protocols through early detection of potential leaks or abnormal readings\n* Improved communication among team members regarding sensor status and maintenance\n* Created a scalable system that can accommodate additional sensors as the Hycel precinct expands\n\n## Process\nThis project was developed as an outsourced engagement for Deakin University's Hycel initiative. The development focused primarily on functionality, ensuring reliable data transfer from sensors to the visualization platform. The system was designed to handle large volumes of IoT data while maintaining responsive performance for users monitoring the facility.\n\n## Project URL\n[[Hycel Asset Management System](https://hycelassetmanagement.space/)](https://hycelassetmanagement.space)\n\n## License\nThis project was developed for Deakin University's Hycel initiative."
  },
  {
    "id": "deep-chill-inventory-management-system",
    "type": "projects",
    "metadata": {
      "title": "Deep Chill Inventory Management System",
      "date": "2022-04-01",
      "summary": "The Deep Chill Inventory Management System is a custom-built web application designed to streamline inventory tracking and calculations in a cold storage/blast freezing environment. This tablet-optimized solution helps staff track product quantities across different storage areas (Blast 1, Blast 2, Deep Chill, Holding, etc.) and automates calculations to save time and reduce errors during daily operations.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/inventory-management-system.png",
      "tag": "php, bootstrap, MySQL"
    },
    "content": "<h2>Project Overview</h2>\n<p>The Deep Chill Management System is a custom-built web application designed to streamline inventory tracking and calculations in a cold storage/blast freezing environment. This tablet-optimized solution helps staff track product quantities across different storage areas (Blast 1, Blast 2, Deep Chill, Holding, etc.) and automates calculations to save time and reduce errors during daily operations.</p>\n<h2>Project Details</h2>\n<h3>Technologies Used</h3>\n<ul>\n<li>PHP</li>\n<li>MySQL</li>\n<li>Bootstrap</li>\n<li>JavaScript/jQuery</li>\n<li>HTML5/CSS3</li>\n<li>AJAX</li>\n<li>Responsive Design</li>\n<li>Mobile-optimized UI</li>\n</ul>\n<h3>Key Features</h3>\n<ul>\n<li><strong>Multi-location Inventory Tracking</strong>: Monitor products across different storage areas (Deep Chill, Dawson, Holding, Blast 1, Blast 2, Tottle)</li>\n<li><strong>Quick Quantity Management</strong>: Intuitive plus/minus buttons and preset quantity options (5, 10, 16, 32, 40)</li>\n<li><strong>Tray and Pie Quantity Tracking</strong>: Separate columns for tracking different product container types</li>\n<li><strong>Automatic Total Calculation</strong>: Real-time updates of total inventory based on entered quantities</li>\n<li><strong>Date Tracking</strong>: Records when products were entered or modified</li>\n<li><strong>Save Functionality</strong>: One-click saving of inventory changes</li>\n<li><strong>User Authentication</strong>: Secure login system with logout functionality</li>\n<li><strong>Query Data</strong>: Generate reports and retrieve historical inventory information</li>\n<li><strong>Responsive Design</strong>: Optimized for tablet use in warehouse/cold storage environments</li>\n</ul>\n<h3>Problem Solved</h3>\n<p>This application was developed for a friend working in a cold storage/freezing facility who needed to:</p>\n<ol>\n<li>Quickly calculate product quantities across different storage locations</li>\n<li>Track inventory movements between different freezing/cooling stages</li>\n<li>Generate reports for management</li>\n<li>Have a mobile solution that works efficiently in a cold environment where staff often wear gloves</li>\n<li>Replace inefficient paper-based tracking systems</li>\n</ol>\n<h3>Implementation Details</h3>\n<ul>\n<li><strong>Bootstrap Framework</strong>: Utilized for responsive design and touch-friendly UI elements</li>\n<li><strong>PHP Backend</strong>: Handles all calculations, data storage, and retrieval logic</li>\n<li><strong>MySQL Database</strong>: Structured to efficiently store product information, quantities, and location data</li>\n<li><strong>AJAX Requests</strong>: Enables real-time updates without page refreshes for a smoother user experience</li>\n<li><strong>Large Touch Targets</strong>: Designed with larger buttons and controls for easy use with gloves or in cold environments</li>\n</ul>\n<h3>Results</h3>\n<ul>\n<li>Significantly reduced time spent on manual calculations and inventory tracking</li>\n<li>Minimized data entry errors common with previous paper-based system</li>\n<li>Improved inventory visibility across different storage areas</li>\n<li>Enhanced reporting capabilities for management</li>\n<li>Streamlined daily workflow for warehouse staff</li>\n</ul>\n<h2>License</h2>\n<p>This project was developed as a custom solution for cold storage inventory management. </p>\n",
    "rawContent": "\n## Project Overview\nThe Deep Chill Management System is a custom-built web application designed to streamline inventory tracking and calculations in a cold storage/blast freezing environment. This tablet-optimized solution helps staff track product quantities across different storage areas (Blast 1, Blast 2, Deep Chill, Holding, etc.) and automates calculations to save time and reduce errors during daily operations.\n\n## Project Details\n\n### Technologies Used\n* PHP\n* MySQL\n* Bootstrap\n* JavaScript/jQuery\n* HTML5/CSS3\n* AJAX\n* Responsive Design\n* Mobile-optimized UI\n\n### Key Features\n* **Multi-location Inventory Tracking**: Monitor products across different storage areas (Deep Chill, Dawson, Holding, Blast 1, Blast 2, Tottle)\n* **Quick Quantity Management**: Intuitive plus/minus buttons and preset quantity options (5, 10, 16, 32, 40)\n* **Tray and Pie Quantity Tracking**: Separate columns for tracking different product container types\n* **Automatic Total Calculation**: Real-time updates of total inventory based on entered quantities\n* **Date Tracking**: Records when products were entered or modified\n* **Save Functionality**: One-click saving of inventory changes\n* **User Authentication**: Secure login system with logout functionality\n* **Query Data**: Generate reports and retrieve historical inventory information\n* **Responsive Design**: Optimized for tablet use in warehouse/cold storage environments\n\n### Problem Solved\nThis application was developed for a friend working in a cold storage/freezing facility who needed to:\n1. Quickly calculate product quantities across different storage locations\n2. Track inventory movements between different freezing/cooling stages\n3. Generate reports for management\n4. Have a mobile solution that works efficiently in a cold environment where staff often wear gloves\n5. Replace inefficient paper-based tracking systems\n\n### Implementation Details\n* **Bootstrap Framework**: Utilized for responsive design and touch-friendly UI elements\n* **PHP Backend**: Handles all calculations, data storage, and retrieval logic\n* **MySQL Database**: Structured to efficiently store product information, quantities, and location data\n* **AJAX Requests**: Enables real-time updates without page refreshes for a smoother user experience\n* **Large Touch Targets**: Designed with larger buttons and controls for easy use with gloves or in cold environments\n\n### Results\n* Significantly reduced time spent on manual calculations and inventory tracking\n* Minimized data entry errors common with previous paper-based system\n* Improved inventory visibility across different storage areas\n* Enhanced reporting capabilities for management\n* Streamlined daily workflow for warehouse staff\n\n## License\nThis project was developed as a custom solution for cold storage inventory management. "
  },
  {
    "id": "code-pad-me--online-code-execution-system",
    "type": "projects",
    "metadata": {
      "title": "Code-Pad.me - Award-Winning Online Code Execution System",
      "date": "2021-11-15",
      "summary": "Code-Pad.me is an award-winning web application that lets users write, run, and share code instantly from any device. Built during my MSc at Nottingham Trent University, it eliminates the need for local compilers using a cloud-based execution system. Designed for learners and educators, it’s perfect for coding challenges, teaching, and collaboration.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/code-pad.png",
      "tag": "Django, bootstrap, JQuery, Docker, SQLite, PostgreSQL, GitLab, Judge0",
      "featured": "yes",
      "github": "https://gitlab.com/digin13dominic/code-pad.me",
      "demo": "https://code-pad.me"
    },
    "content": "<blockquote>\n<p><strong>Best Project Award Winner</strong><br>MSc Cyber Security – Nottingham Trent University  </p>\n</blockquote>\n<hr>\n<h2>🚀 About the Project</h2>\n<p><strong>Code-Pad.me</strong> is an online code execution web platform designed to help learners, educators, and developers write, share, and execute code effortlessly from any device—without the need to install a local compiler or development environment.</p>\n<p>Whether you&#39;re coding from a desktop, tablet, or even a mobile browser, Code-Pad.me empowers users to share challenges, test code snippets, and learn collaboratively—all within a sleek, browser-based interface.</p>\n<hr>\n<h2>🧠 Inspiration</h2>\n<p>During the COVID-19 pandemic, e-learning became a lifeline for education. However, coding education suffered due to setup issues—like incompatible compilers, platform dependencies, and device limitations (especially for iOS users).<br>This inspired me to develop <strong>Code-Pad.me</strong>—a zero-setup, responsive, cloud-based code runner that works anywhere, anytime.</p>\n<hr>\n<h2>🎯 Project Goals</h2>\n<ul>\n<li>Build a <strong>web-based code execution platform</strong> supporting multiple programming languages.</li>\n<li>Eliminate setup barriers by offering <strong>compiler-less code execution</strong>.</li>\n<li>Enable users to <strong>create and share coding challenges</strong> for peer learning.</li>\n<li>Encourage coding collaboration with <strong>shareable links &amp; QR codes</strong>.</li>\n<li>Ensure cross-platform access with a <strong>responsive, mobile-first design</strong>.</li>\n</ul>\n<hr>\n<h2>💡 Key Features</h2>\n<ul>\n<li>🖥️ <strong>Multi-language Code Execution</strong> (via Judge0 API)</li>\n<li>🔒 <strong>Secure, Containerized Execution</strong> (Docker-based sandboxing)</li>\n<li>📱 <strong>Mobile &amp; Desktop Friendly</strong> (Responsive UI using Bootstrap 5)</li>\n<li>📤 <strong>Code Sharing with QR &amp; Short URLs</strong></li>\n<li>🎯 <strong>Custom &amp; Random Challenges</strong> for continuous learning</li>\n<li>📥 <strong>Downloadable Code</strong> with proper file extensions</li>\n<li>🔢 <strong>Code View Metrics</strong> to track engagement</li>\n<li>💬 <strong>User Feedback Integration</strong> during development</li>\n</ul>\n<hr>\n<h2>🏗️ Architecture Overview</h2>\n<p>The app uses a modern stack with continuous delivery pipelines:</p>\n<ul>\n<li><strong>Backend</strong>: Python (Django)</li>\n<li><strong>Frontend</strong>: Bootstrap, JavaScript, JQuery, CodeMirror Editor</li>\n<li><strong>API</strong>: Judge0 for secure multi-language code execution</li>\n<li><strong>CI/CD</strong>: GitLab Runner, Docker</li>\n<li><strong>Database</strong>: SQLite (Dev), PostgreSQL (Production)</li>\n<li><strong>Deployment</strong>: Docker containers on Ubuntu VM</li>\n</ul>\n<hr>\n<h2>🧪 Testing &amp; Evaluation</h2>\n<ul>\n<li>✅ <strong>Unit &amp; System Testing</strong>: Validated core functionality, user interactions, and system behavior.</li>\n<li>📈 <strong>Performance Testing</strong>: Tested with up to 1000 concurrent users using <code>httperf</code>.</li>\n<li>📋 <strong>User Feedback Surveys</strong>: Guided feature additions like:<ul>\n<li>Dark mode (Planned)</li>\n<li>Challenge system</li>\n<li>QR code sharing</li>\n<li>Code readability improvements via CodeMirror</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h2>🔍 Screenshots</h2>\n<h3><em>Home Interface</em></h3>\n<p><img src=\"https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/code-pad-screenshot.PNG\" alt=\"Home Screenshot\"></p>\n<h3><em>QR Code Sharing Modal</em></h3>\n<p><img src=\"https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/code-pad-screenshot.PNG\" alt=\"QR Code Screenshot\"></p>\n<hr>\n<h2>📈 Achievements</h2>\n<ul>\n<li>🏆 <strong>Best Project Award</strong> - Nottingham Trent University, 2025</li>\n<li>🎓 Successfully presented to academic panels and peers</li>\n<li>💬 Positive feedback from students, developers, and educators</li>\n</ul>\n<hr>\n<h2>🧩 Future Roadmap</h2>\n<ul>\n<li>🌑 <strong>Dark Mode Toggle</strong></li>\n<li>🔼 <strong>Like &amp; Cheer Buttons</strong></li>\n<li>📊 <strong>Ranking System</strong> for competitive users</li>\n<li>📚 <strong>Knowledge Base &amp; Tutorials</strong></li>\n<li>🆘 <strong>Help &amp; Troubleshooting Center</strong></li>\n<li>📥 <strong>Feedback Form</strong></li>\n</ul>\n<hr>\n<h2>📚 Technologies Used</h2>\n<ul>\n<li><strong>Python</strong>, <strong>Django</strong></li>\n<li><strong>Judge0 API</strong></li>\n<li><strong>Bootstrap</strong>, <strong>JavaScript</strong>, <strong>JQuery</strong>, <strong>CodeMirror</strong></li>\n<li><strong>Docker</strong>, <strong>Heroku</strong></li>\n<li><strong>GitLab CI/CD</strong>, <strong>TravisCI</strong>, <strong>BetterCodeHub</strong></li>\n<li><strong>SQLite</strong>, <strong>PostgreSQL</strong></li>\n</ul>\n<hr>\n<h2>Award Certificate</h2>\n<p><img src=\"https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/projectaward.png\" alt=\"Award Certificate\"></p>\n<hr>\n<h2>🔗 Live Demo</h2>\n<p>🌐 <a href=\"https://code-pad.me\">https://code-pad.me</a><br>Try it live! Create, run, and share your code today.</p>\n<hr>\n<h2>🙌 Acknowledgements</h2>\n<p>Special thanks to my supervisor <a href=\"https://shah.fyi/\">Dr. Madasar Shah</a> and Nottingham Trent University&#39;s School of Science and Technology for their support. And to every beta tester who gave invaluable feedback—thank you!</p>\n<hr>\n<blockquote>\n<p><em>“This project wasn&#39;t just about building a code runner—it&#39;s about empowering anyone, anywhere, to learn and write code without barriers.”</em><br>— <strong>Digin Dominic</strong></p>\n</blockquote>\n",
    "rawContent": "\n> **Best Project Award Winner**  \n> MSc Cyber Security – Nottingham Trent University  \n\n---\n\n## 🚀 About the Project\n\n**Code-Pad.me** is an online code execution web platform designed to help learners, educators, and developers write, share, and execute code effortlessly from any device—without the need to install a local compiler or development environment.\n\nWhether you're coding from a desktop, tablet, or even a mobile browser, Code-Pad.me empowers users to share challenges, test code snippets, and learn collaboratively—all within a sleek, browser-based interface.\n\n---\n\n## 🧠 Inspiration\n\nDuring the COVID-19 pandemic, e-learning became a lifeline for education. However, coding education suffered due to setup issues—like incompatible compilers, platform dependencies, and device limitations (especially for iOS users).  \nThis inspired me to develop **Code-Pad.me**—a zero-setup, responsive, cloud-based code runner that works anywhere, anytime.\n\n---\n\n## 🎯 Project Goals\n\n- Build a **web-based code execution platform** supporting multiple programming languages.\n- Eliminate setup barriers by offering **compiler-less code execution**.\n- Enable users to **create and share coding challenges** for peer learning.\n- Encourage coding collaboration with **shareable links & QR codes**.\n- Ensure cross-platform access with a **responsive, mobile-first design**.\n\n---\n\n## 💡 Key Features\n\n- 🖥️ **Multi-language Code Execution** (via Judge0 API)\n- 🔒 **Secure, Containerized Execution** (Docker-based sandboxing)\n- 📱 **Mobile & Desktop Friendly** (Responsive UI using Bootstrap 5)\n- 📤 **Code Sharing with QR & Short URLs**\n- 🎯 **Custom & Random Challenges** for continuous learning\n- 📥 **Downloadable Code** with proper file extensions\n- 🔢 **Code View Metrics** to track engagement\n- 💬 **User Feedback Integration** during development\n\n---\n\n## 🏗️ Architecture Overview\n\nThe app uses a modern stack with continuous delivery pipelines:\n\n- **Backend**: Python (Django)\n- **Frontend**: Bootstrap, JavaScript, JQuery, CodeMirror Editor\n- **API**: Judge0 for secure multi-language code execution\n- **CI/CD**: GitLab Runner, Docker\n- **Database**: SQLite (Dev), PostgreSQL (Production)\n- **Deployment**: Docker containers on Ubuntu VM\n\n---\n\n## 🧪 Testing & Evaluation\n\n- ✅ **Unit & System Testing**: Validated core functionality, user interactions, and system behavior.\n- 📈 **Performance Testing**: Tested with up to 1000 concurrent users using `httperf`.\n- 📋 **User Feedback Surveys**: Guided feature additions like:\n  - Dark mode (Planned)\n  - Challenge system\n  - QR code sharing\n  - Code readability improvements via CodeMirror\n\n---\n\n## 🔍 Screenshots\n\n### _Home Interface_  \n![Home Screenshot](https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/code-pad-screenshot.PNG)\n\n### _QR Code Sharing Modal_  \n![QR Code Screenshot](https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/code-pad-screenshot.PNG)\n\n---\n\n## 📈 Achievements\n\n- 🏆 **Best Project Award** - Nottingham Trent University, 2025\n- 🎓 Successfully presented to academic panels and peers\n- 💬 Positive feedback from students, developers, and educators\n\n---\n\n## 🧩 Future Roadmap\n\n- 🌑 **Dark Mode Toggle**\n- 🔼 **Like & Cheer Buttons**\n- 📊 **Ranking System** for competitive users\n- 📚 **Knowledge Base & Tutorials**\n- 🆘 **Help & Troubleshooting Center**\n- 📥 **Feedback Form**\n\n---\n\n## 📚 Technologies Used\n\n- **Python**, **Django**\n- **Judge0 API**\n- **Bootstrap**, **JavaScript**, **JQuery**, **CodeMirror**\n- **Docker**, **Heroku**\n- **GitLab CI/CD**, **TravisCI**, **BetterCodeHub**\n- **SQLite**, **PostgreSQL**\n\n---\n## Award Certificate\n\n![Award Certificate](https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/projectaward.png)\n\n---\n\n## 🔗 Live Demo\n\n🌐 [https://code-pad.me](https://code-pad.me)  \nTry it live! Create, run, and share your code today.\n\n---\n\n## 🙌 Acknowledgements\n\nSpecial thanks to my supervisor [Dr. Madasar Shah](https://shah.fyi/) and Nottingham Trent University's School of Science and Technology for their support. And to every beta tester who gave invaluable feedback—thank you!\n\n---\n\n> _“This project wasn't just about building a code runner—it's about empowering anyone, anywhere, to learn and write code without barriers.”_  \n> — **Digin Dominic**\n\n"
  },
  {
    "id": "boot-factory-e-commerce-platform-development",
    "type": "projects",
    "metadata": {
      "title": "Boot Factory: E-Commerce Platform Development with ASP.NET MVC",
      "date": "2021-05-31",
      "summary": "Designed and built a fully functional e-commerce platform for footwear using C# ASP.NET MVC architecture. This coursework project demonstrates proficiency in web development frameworks, database integration, user authentication, and shopping cart functionality while following industry best practices.",
      "image": "https://raw.githubusercontent.com/digin1/web-images/refs/heads/main/bootfactory.png",
      "tag": "ASP.NET, C#, MVC",
      "github": "https://github.com/digin1/Boot-Factory"
    },
    "content": "<h2>Project Overview</h2>\n<p>Boot Factory is an e-commerce web application developed as coursework using the ASP.NET MVC framework and C#. The project demonstrates my ability to build scalable, secure, and user-friendly web applications from the ground up. The platform allows users to browse a catalogue of footwear products, add items to their shopping basket, and proceed through a complete checkout process.</p>\n<h2>Technical Stack</h2>\n<ul>\n<li><strong>Backend</strong>: C# with ASP.NET MVC framework</li>\n<li><strong>Frontend</strong>: HTML5, CSS3, Bootstrap for responsive design</li>\n<li><strong>Database</strong>: SQL Server for product data and user management</li>\n<li><strong>Authentication</strong>: ASP.NET Identity for secure user login and registration</li>\n<li><strong>Version Control</strong>: Git for source code management</li>\n</ul>\n<h2>Key Features Implemented</h2>\n<ul>\n<li><strong>User Authentication System</strong>: Secure login, registration, and user profile management with email confirmation</li>\n<li><strong>Product Catalogue</strong>: Categorized browsing with filtering and search functionality</li>\n<li><strong>Shopping Basket</strong>: AJAX-powered add/remove functionality with real-time total calculation</li>\n<li><strong>Order Processing</strong>: Complete checkout flow with address collection and order confirmation</li>\n<li><strong>Admin Dashboard</strong>: Product management interface for adding, editing, and removing products</li>\n<li><strong>Responsive Design</strong>: Mobile-friendly interface that adapts to different screen sizes</li>\n</ul>\n<h2>Development Challenges</h2>\n<p>The most significant challenges I encountered during development included implementing session management for the shopping basket functionality and ensuring proper validation of user input throughout the application. I overcame these by leveraging ASP.NET session state management and implementing robust model validation.</p>\n<h2>What I Learned</h2>\n<p>This project significantly improved my understanding of:</p>\n<ul>\n<li>MVC architecture pattern and its practical implementation</li>\n<li>Entity Framework for database operations</li>\n<li>Authentication and authorization in web applications</li>\n<li>Frontend-backend integration using Razor views</li>\n<li>Form validation and security best practices</li>\n<li>User experience design for e-commerce platforms</li>\n</ul>\n<h2>Conclusion</h2>\n<p>The Boot Factory project demonstrates my capability to develop a complete web application using modern technologies and patterns. Through this coursework, I gained valuable experience in building secure, scalable, and user-friendly web applications that would transfer well to real-world e-commerce development.</p>\n<h2>GitHub Repository</h2>\n<p><a href=\"https://github.com/digin1/Boot-Factory\"><a href=\"https://github.com/digin1/Boot-Factory\">digin1/Boot-Factory</a></a></p>\n",
    "rawContent": "\n## Project Overview\nBoot Factory is an e-commerce web application developed as coursework using the ASP.NET MVC framework and C#. The project demonstrates my ability to build scalable, secure, and user-friendly web applications from the ground up. The platform allows users to browse a catalogue of footwear products, add items to their shopping basket, and proceed through a complete checkout process.\n\n## Technical Stack\n* **Backend**: C# with ASP.NET MVC framework\n* **Frontend**: HTML5, CSS3, Bootstrap for responsive design\n* **Database**: SQL Server for product data and user management\n* **Authentication**: ASP.NET Identity for secure user login and registration\n* **Version Control**: Git for source code management\n\n## Key Features Implemented\n* **User Authentication System**: Secure login, registration, and user profile management with email confirmation\n* **Product Catalogue**: Categorized browsing with filtering and search functionality\n* **Shopping Basket**: AJAX-powered add/remove functionality with real-time total calculation\n* **Order Processing**: Complete checkout flow with address collection and order confirmation\n* **Admin Dashboard**: Product management interface for adding, editing, and removing products\n* **Responsive Design**: Mobile-friendly interface that adapts to different screen sizes\n\n## Development Challenges\nThe most significant challenges I encountered during development included implementing session management for the shopping basket functionality and ensuring proper validation of user input throughout the application. I overcame these by leveraging ASP.NET session state management and implementing robust model validation.\n\n## What I Learned\nThis project significantly improved my understanding of:\n* MVC architecture pattern and its practical implementation\n* Entity Framework for database operations\n* Authentication and authorization in web applications\n* Frontend-backend integration using Razor views\n* Form validation and security best practices\n* User experience design for e-commerce platforms\n\n## Conclusion\nThe Boot Factory project demonstrates my capability to develop a complete web application using modern technologies and patterns. Through this coursework, I gained valuable experience in building secure, scalable, and user-friendly web applications that would transfer well to real-world e-commerce development.\n\n## GitHub Repository\n[[digin1/Boot-Factory](https://github.com/digin1/Boot-Factory)](https://github.com/digin1/Boot-Factory)"
  },
  {
    "id": "automating-secure-infrastructure-with-ansible-project",
    "type": "projects",
    "metadata": {
      "title": "Automating Secure Infrastructure with Ansible: Managing SSH, Sudoers, and User Access Control",
      "date": "2021-12-12",
      "summary": "Automating Secure Infrastructure with Ansible streamlines SSH key management, user provisioning, and sudoers configuration to enhance security and efficiency. This project ensures password-less authentication, centralized sudo monitoring, and safe system administration through Infrastructure as Code (IaC). 🚀",
      "image": "https://raw.githubusercontent.com/digin1/web-images/main/ansible.png",
      "tag": "ansible, ubuntu",
      "featured": "yes"
    },
    "content": "<h2><strong>Introduction</strong></h2>\n<p>Infrastructure automation is a critical aspect of modern system administration. My project focused on using <strong>Ansible</strong> to automate essential administrative tasks such as:</p>\n<ul>\n<li><strong>Managing SSH Key Authentication</strong></li>\n<li><strong>Creating and Removing Users Securely</strong></li>\n<li><strong>Configuring Sudoers for Role-Based Access Control</strong></li>\n<li><strong>Monitoring and Logging Sudo Actions</strong></li>\n<li><strong>Deploying Security Enhancements (Safe Deletion, Password Policies, etc.)</strong></li>\n</ul>\n<p>The primary goal was to create an automated, repeatable, and scalable solution for managing user access and securing the infrastructure.</p>\n<hr>\n<h2><strong>1. SSH Key Management and Secure Access Automation</strong></h2>\n<p>One of the core challenges in multi-node environments is <strong>secure authentication</strong>. Instead of relying on password-based access, I automated <strong>SSH key generation, distribution, and configuration</strong>.</p>\n<h3><strong>Generating and Distributing SSH Keys</strong></h3>\n<p>Ansible was used to generate SSH keys for different hosts and copy them to the appropriate machines.</p>\n<p><strong>Playbook for Generating SSH Keys (Conditional Execution to Avoid Overwriting):</strong></p>\n<pre><code class=\"language-yaml\">- name: Generate SSH keys for root if they don’t exist\n  hosts: all\n  become: false\n  tasks:\n    - name: Check if root SSH key exists\n      stat:\n        path: &quot;~/.ssh/id_rsa&quot;\n      register: ssh_key_check\n\n    - name: Generate SSH key for root\n      shell: ssh-keygen -t rsa -N &#39;&#39; -f ~/.ssh/id_rsa\n      when: not ssh_key_check.stat.exists\n</code></pre>\n<h3><strong>Copying SSH Keys to Ansible Host</strong></h3>\n<p>To allow secure, password-less communication between machines, public keys were copied to the <strong>Ansible control machine</strong>:</p>\n<pre><code class=\"language-yaml\">- name: Copy SSH keys to Ansible control machine\n  hosts: awsnodes\n  become: true\n  tasks:\n    - name: Fetch public SSH key from nodes\n      fetch:\n        src: &quot;~/.ssh/id_rsa.pub&quot;\n        dest: &quot;/root/awskeys/{{ inventory_hostname }}_id_rsa.pub&quot;\n        flat: yes\n</code></pre>\n<h3><strong>Copying SSH Keys to Target Nodes</strong></h3>\n<pre><code class=\"language-yaml\">- name: Copy SSH keys to authorized_keys on target nodes\n  hosts: logserver\n  become: true\n  vars:\n    key_dir: /root/awskeys\n  tasks:\n    - name: Ensure .ssh directory exists\n      file:\n        path: &quot;/root/.ssh&quot;\n        state: directory\n        mode: &quot;0700&quot;\n\n    - name: Add public SSH keys\n      authorized_key:\n        user: &quot;root&quot;\n        key: &quot;{{ lookup(&#39;file&#39;, item) }}&quot;\n        state: present\n      with_fileglob: &quot;{{ key_dir }}/*_id_rsa.pub&quot;\n</code></pre>\n<h3><strong>Outcome</strong></h3>\n<p>✅ <strong>Password-less authentication</strong> across all servers<br>✅ <strong>Hardened security</strong> by eliminating password-based access<br>✅ <strong>Automated onboarding</strong> for new machines with SSH authentication  </p>\n<hr>\n<h2><strong>2. Automated User and Sudoers Management</strong></h2>\n<p>Managing users manually across multiple servers can lead to inconsistencies and security risks. Ansible was used to automate <strong>user creation, privilege assignment, and sudoers configuration</strong>.</p>\n<h3><strong>Creating Users</strong></h3>\n<pre><code class=\"language-yaml\">- name: Create users on all nodes\n  hosts: all\n  become: true\n  vars:\n    users:\n      - alice\n      - bob\n      - charlie\n  tasks:\n    - name: Add users\n      user:\n        name: &quot;{{ item }}&quot;\n        create_home: yes\n        state: present\n      loop: &quot;{{ users }}&quot;\n</code></pre>\n<h3><strong>Granting Sudo Privileges</strong></h3>\n<p>To enforce <strong>role-based access control</strong>, users were assigned to the sudoers file <strong>with strict validation</strong>:</p>\n<pre><code class=\"language-yaml\">- name: Configure sudoers for specific users\n  hosts: all\n  become: true\n  tasks:\n    - name: Add users to sudoers\n      lineinfile:\n        path: /etc/sudoers\n        state: present\n        line: &quot;{{ item }} ALL=(ALL) NOPASSWD: ALL&quot;\n        validate: &quot;/usr/sbin/visudo -cf %s&quot;\n      loop: &quot;{{ users }}&quot;\n</code></pre>\n<p><strong>Outcome</strong>:\n✅ <strong>Role-based access management</strong><br>✅ <strong>Automated onboarding &amp; offboarding</strong> of users<br>✅ <strong>Strict sudoers validation</strong> to prevent misconfigurations  </p>\n<hr>\n<h2><strong>3. Monitoring Sudo Commands and Logging Activity</strong></h2>\n<p>To improve security, all <code>sudo</code> activity needed to be logged and monitored remotely.</p>\n<h3><strong>Playbook for Enabling Sudo Logging</strong></h3>\n<pre><code class=\"language-yaml\">- name: Configure sudo logging\n  hosts: all\n  become: true\n  tasks:\n    - name: Add sudo replay logging\n      lineinfile:\n        path: /etc/sudoers\n        state: present\n        insertafter: &#39;^# Defaults.*visiblepw&#39;\n        line: |\n          Defaults log_output\n          Defaults!/usr/bin/sudoreplay !log_output\n          Defaults!/sbin/reboot !log_output\n</code></pre>\n<h3><strong>Automated Log Collection and Sync</strong></h3>\n<p>A script was deployed to <strong>automatically sync logs</strong> from all nodes to a remote monitoring server.</p>\n<pre><code class=\"language-bash\">#!/bin/bash\nSRC=&quot;/var/log/sudo-io/&quot;\nDEST_DIR=&quot;/root/sudologs/{{ inventory_hostname }}/&quot;\nDEST_HOST=&quot;root@18.218.206.77&quot;\nSSH_PORT=4956\n\nssh -p &quot;$SSH_PORT&quot; -o StrictHostKeyChecking=no &quot;$DEST_HOST&quot; &quot;mkdir -p $DEST_DIR&quot;\nrsync -avz -e &quot;ssh -p $SSH_PORT -o StrictHostKeyChecking=no&quot; &quot;$SRC&quot; &quot;$DEST_HOST:$DEST_DIR&quot;\n</code></pre>\n<p>A <strong>cron job</strong> was configured to run this script <strong>every 12 hours</strong>.</p>\n<pre><code class=\"language-yaml\">- name: Schedule sudo log monitoring script\n  cron:\n    name: &quot;Monitor Sudo Logs&quot;\n    minute: &quot;0&quot;\n    hour: &quot;*/12&quot;\n    job: &quot;/root/monitor_sudo_logs.sh &gt;&gt; /var/log/monitor_sudo_logs.log 2&gt;&amp;1&quot;\n    state: present\n</code></pre>\n<h3><strong>Outcome</strong></h3>\n<p>✅ <strong>Centralized sudo activity monitoring</strong><br>✅ <strong>Regular log synchronization</strong> for auditing<br>✅ <strong>Prevention of privilege escalation attempts</strong>  </p>\n<hr>\n<h2><strong>4. Enhancing Security with Safe Deletion Policies</strong></h2>\n<p>Accidental file deletions can cause <strong>irreversible damage</strong>. To prevent this, I implemented a <strong>safe deletion wrapper script</strong>.</p>\n<h3><strong>Safe <code>rm</code> Script</strong></h3>\n<pre><code class=\"language-bash\">#!/bin/bash\necho &quot;Warning: You are using the &#39;rm&#39; command which deletes files permanently!&quot;\necho &quot;Files to be deleted: $@&quot;\nread -p &quot;Are you sure you want to continue? (y/n) &quot; -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n    /bin/rm &quot;$@&quot;\nelse\n    echo &quot;Operation cancelled.&quot;\nfi\n</code></pre>\n<h3><strong>Deploying Safe <code>rm</code> Script Using Ansible</strong></h3>\n<pre><code class=\"language-yaml\">- name: Deploy safe_rm script\n  hosts: all\n  become: true\n  tasks:\n    - name: Copy safe_rm script\n      copy:\n        src: safe_rm.sh\n        dest: /usr/local/bin/safe_rm\n        mode: &quot;0755&quot;\n\n    - name: Alias rm to safe_rm\n      blockinfile:\n        path: /etc/profile\n        block: |\n          alias rm=&#39;safe_rm&#39;\n        create: yes\n</code></pre>\n<h3><strong>Outcome</strong></h3>\n<p>✅ <strong>Prevention of accidental file deletions</strong><br>✅ <strong>Enhanced safety while using <code>rm</code> command</strong><br>✅ <strong>Forced user confirmation before permanent deletions</strong>  </p>\n<hr>\n<h2><strong>Final Takeaways</strong></h2>\n<p>By implementing Ansible automation, I was able to <strong>streamline</strong> system administration across multiple nodes, ensuring:</p>\n<p>✔ <strong>Secure and password-less authentication</strong> using SSH keys<br>✔ <strong>Automated user management</strong> with structured onboarding &amp; offboarding<br>✔ <strong>Centralized sudo monitoring</strong> with periodic log collection<br>✔ <strong>Strict sudoers file management</strong> with validation to prevent errors<br>✔ <strong>A safer file deletion process</strong> with <code>safe_rm</code>  </p>\n<p>This project reinforced my skills in <strong>infrastructure automation, security hardening, and scalable system management</strong>. 🚀</p>\n",
    "rawContent": "\n## **Introduction**\n\nInfrastructure automation is a critical aspect of modern system administration. My project focused on using **Ansible** to automate essential administrative tasks such as:\n\n- **Managing SSH Key Authentication**\n- **Creating and Removing Users Securely**\n- **Configuring Sudoers for Role-Based Access Control**\n- **Monitoring and Logging Sudo Actions**\n- **Deploying Security Enhancements (Safe Deletion, Password Policies, etc.)**\n\nThe primary goal was to create an automated, repeatable, and scalable solution for managing user access and securing the infrastructure.\n\n---\n\n## **1. SSH Key Management and Secure Access Automation**\n\nOne of the core challenges in multi-node environments is **secure authentication**. Instead of relying on password-based access, I automated **SSH key generation, distribution, and configuration**.\n\n### **Generating and Distributing SSH Keys**\nAnsible was used to generate SSH keys for different hosts and copy them to the appropriate machines.\n\n**Playbook for Generating SSH Keys (Conditional Execution to Avoid Overwriting):**\n```yaml\n- name: Generate SSH keys for root if they don’t exist\n  hosts: all\n  become: false\n  tasks:\n    - name: Check if root SSH key exists\n      stat:\n        path: \"~/.ssh/id_rsa\"\n      register: ssh_key_check\n\n    - name: Generate SSH key for root\n      shell: ssh-keygen -t rsa -N '' -f ~/.ssh/id_rsa\n      when: not ssh_key_check.stat.exists\n```\n\n### **Copying SSH Keys to Ansible Host**\nTo allow secure, password-less communication between machines, public keys were copied to the **Ansible control machine**:\n\n```yaml\n- name: Copy SSH keys to Ansible control machine\n  hosts: awsnodes\n  become: true\n  tasks:\n    - name: Fetch public SSH key from nodes\n      fetch:\n        src: \"~/.ssh/id_rsa.pub\"\n        dest: \"/root/awskeys/{{ inventory_hostname }}_id_rsa.pub\"\n        flat: yes\n```\n\n### **Copying SSH Keys to Target Nodes**\n```yaml\n- name: Copy SSH keys to authorized_keys on target nodes\n  hosts: logserver\n  become: true\n  vars:\n    key_dir: /root/awskeys\n  tasks:\n    - name: Ensure .ssh directory exists\n      file:\n        path: \"/root/.ssh\"\n        state: directory\n        mode: \"0700\"\n\n    - name: Add public SSH keys\n      authorized_key:\n        user: \"root\"\n        key: \"{{ lookup('file', item) }}\"\n        state: present\n      with_fileglob: \"{{ key_dir }}/*_id_rsa.pub\"\n```\n\n### **Outcome**\n✅ **Password-less authentication** across all servers  \n✅ **Hardened security** by eliminating password-based access  \n✅ **Automated onboarding** for new machines with SSH authentication  \n\n---\n\n## **2. Automated User and Sudoers Management**\n\nManaging users manually across multiple servers can lead to inconsistencies and security risks. Ansible was used to automate **user creation, privilege assignment, and sudoers configuration**.\n\n### **Creating Users**\n```yaml\n- name: Create users on all nodes\n  hosts: all\n  become: true\n  vars:\n    users:\n      - alice\n      - bob\n      - charlie\n  tasks:\n    - name: Add users\n      user:\n        name: \"{{ item }}\"\n        create_home: yes\n        state: present\n      loop: \"{{ users }}\"\n```\n\n### **Granting Sudo Privileges**\nTo enforce **role-based access control**, users were assigned to the sudoers file **with strict validation**:\n\n```yaml\n- name: Configure sudoers for specific users\n  hosts: all\n  become: true\n  tasks:\n    - name: Add users to sudoers\n      lineinfile:\n        path: /etc/sudoers\n        state: present\n        line: \"{{ item }} ALL=(ALL) NOPASSWD: ALL\"\n        validate: \"/usr/sbin/visudo -cf %s\"\n      loop: \"{{ users }}\"\n```\n\n**Outcome**:\n✅ **Role-based access management**  \n✅ **Automated onboarding & offboarding** of users  \n✅ **Strict sudoers validation** to prevent misconfigurations  \n\n---\n\n## **3. Monitoring Sudo Commands and Logging Activity**\n\nTo improve security, all `sudo` activity needed to be logged and monitored remotely.\n\n### **Playbook for Enabling Sudo Logging**\n```yaml\n- name: Configure sudo logging\n  hosts: all\n  become: true\n  tasks:\n    - name: Add sudo replay logging\n      lineinfile:\n        path: /etc/sudoers\n        state: present\n        insertafter: '^# Defaults.*visiblepw'\n        line: |\n          Defaults log_output\n          Defaults!/usr/bin/sudoreplay !log_output\n          Defaults!/sbin/reboot !log_output\n```\n\n### **Automated Log Collection and Sync**\nA script was deployed to **automatically sync logs** from all nodes to a remote monitoring server.\n\n```bash\n#!/bin/bash\nSRC=\"/var/log/sudo-io/\"\nDEST_DIR=\"/root/sudologs/{{ inventory_hostname }}/\"\nDEST_HOST=\"root@18.218.206.77\"\nSSH_PORT=4956\n\nssh -p \"$SSH_PORT\" -o StrictHostKeyChecking=no \"$DEST_HOST\" \"mkdir -p $DEST_DIR\"\nrsync -avz -e \"ssh -p $SSH_PORT -o StrictHostKeyChecking=no\" \"$SRC\" \"$DEST_HOST:$DEST_DIR\"\n```\n\nA **cron job** was configured to run this script **every 12 hours**.\n\n```yaml\n- name: Schedule sudo log monitoring script\n  cron:\n    name: \"Monitor Sudo Logs\"\n    minute: \"0\"\n    hour: \"*/12\"\n    job: \"/root/monitor_sudo_logs.sh >> /var/log/monitor_sudo_logs.log 2>&1\"\n    state: present\n```\n\n### **Outcome**\n✅ **Centralized sudo activity monitoring**  \n✅ **Regular log synchronization** for auditing  \n✅ **Prevention of privilege escalation attempts**  \n\n---\n\n## **4. Enhancing Security with Safe Deletion Policies**\n\nAccidental file deletions can cause **irreversible damage**. To prevent this, I implemented a **safe deletion wrapper script**.\n\n### **Safe `rm` Script**\n```bash\n#!/bin/bash\necho \"Warning: You are using the 'rm' command which deletes files permanently!\"\necho \"Files to be deleted: $@\"\nread -p \"Are you sure you want to continue? (y/n) \" -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n    /bin/rm \"$@\"\nelse\n    echo \"Operation cancelled.\"\nfi\n```\n\n### **Deploying Safe `rm` Script Using Ansible**\n```yaml\n- name: Deploy safe_rm script\n  hosts: all\n  become: true\n  tasks:\n    - name: Copy safe_rm script\n      copy:\n        src: safe_rm.sh\n        dest: /usr/local/bin/safe_rm\n        mode: \"0755\"\n\n    - name: Alias rm to safe_rm\n      blockinfile:\n        path: /etc/profile\n        block: |\n          alias rm='safe_rm'\n        create: yes\n```\n\n### **Outcome**\n✅ **Prevention of accidental file deletions**  \n✅ **Enhanced safety while using `rm` command**  \n✅ **Forced user confirmation before permanent deletions**  \n\n---\n\n## **Final Takeaways**\n\nBy implementing Ansible automation, I was able to **streamline** system administration across multiple nodes, ensuring:\n\n✔ **Secure and password-less authentication** using SSH keys  \n✔ **Automated user management** with structured onboarding & offboarding  \n✔ **Centralized sudo monitoring** with periodic log collection  \n✔ **Strict sudoers file management** with validation to prevent errors  \n✔ **A safer file deletion process** with `safe_rm`  \n\nThis project reinforced my skills in **infrastructure automation, security hardening, and scalable system management**. 🚀"
  }
]